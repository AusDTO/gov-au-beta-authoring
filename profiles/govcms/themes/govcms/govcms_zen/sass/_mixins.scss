// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

@mixin noSpace {
  margin: 0;
  padding: 0;
}

@mixin underlineOnHover {
  text-decoration: none;
  &:hover { text-decoration: underline; }
}

@mixin standard-button {
  background: $color-highlight;
  color: $color-highlight-contrast;
  margin-right: 0.5em;
  font-size: 1.4em;
  padding: 0.3em 0.5em;
  @include box-shadow(1px 1px 1px #C9C9C9);
  &:hover {
    background: lighten($color-highlight, 10%);
  }
  &:active {
    background: darken($color-highlight, 5%);
  }
}

%pseudo-block {
  content: "";
  display: block;
}
